package com.inv;

import java.io.IOException;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.io.compress.BZip2Codec;
import org.apache.hadoop.io.compress.GzipCodec;
import org.apache.hadoop.io.compress.Lz4Codec;
import org.apache.hadoop.io.compress.SnappyCodec;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
import org.apache.hadoop.mapreduce.lib.output.SequenceFileOutputFormat;

public class WordCountDriver {
	public static void main(String[] args) throws IOException, ClassNotFoundException, InterruptedException {
		// Jarfile entryclass inputfile outputlocation
		//args[0] input loc
		//args[1] output loc
		
		//JOB object depends configuration 
		//Get configuration object
		
		Configuration conf = new Configuration();
		
		/*conf.set("mapreduce.map.output.compress", "true");
		conf.set("mapreduce.output.fileoutputformat.compress","true");
		conf.set("mapreduce.output.fileoutputformat.compress.codec","org.apache.hadoop.io.compress.GzipCodec");
*/
		Job job=Job.getInstance(conf, "WordCount Inventateq");
		//Job object represents MR job
		job.setJarByClass(WordCountDriver.class); //Entry point of job
		job.setMapperClass(WordCountMapper.class);
		job.setReducerClass(WordCountReducer.class);
		//job.setCombinerClass(WordCountReducer.class);
		//job.setNumReduceTasks(3);
		
		//job input types  and job output types different 
		//below lines need to be mentioned
		job.setOutputKeyClass(Text.class);
		job.setOutputValueClass(IntWritable.class);
		
		//job.setOutputFormatClass(SequenceFileOutputFormat.class);
		
		FileInputFormat.addInputPath(job, new Path(args[0]));
		FileOutputFormat.setOutputPath(job, new Path(args[1]));
		
				
		boolean status=job.waitForCompletion(true);		
		int result=status?0:1;
		
		System.exit(result);
		
		
	}

}
