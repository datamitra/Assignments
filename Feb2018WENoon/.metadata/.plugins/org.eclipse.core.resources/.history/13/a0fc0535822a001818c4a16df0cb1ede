import java.io.IOException;
import java.net.URI;

import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Reducer;

public class Q2Reducer extends Reducer<IntWritable, Text, Text	, IntWritable>{
	int i=0;
	
	@Override
	protected void setup(Reducer<IntWritable, Text, Text, IntWritable>.Context context)
			throws IOException, InterruptedException {

		URI[] files=context.getCacheFiles();
		for (int i = 0; i < files.length; i++) {
			System.out.println("++++++++++++++++++++"+files[i].toString());
		}
	}
	
	@Override
	protected void reduce(IntWritable key, Iterable<Text> values,
			Reducer<IntWritable, Text, Text, IntWritable>.Context context) throws IOException, InterruptedException {
		
			for (Text val : values) {
				if(i<10){
				context.write(val,new IntWritable(key.get()*-1));
				i=i+1;
			}			
		}
			
	
	}

}
