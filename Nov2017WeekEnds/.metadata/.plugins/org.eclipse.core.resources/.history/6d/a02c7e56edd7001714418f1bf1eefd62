package com.inv;

import java.io.IOException;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.FileSystem;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.NullWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;

public class WordCountDriver {
	public static void main(String[] args) throws IOException, ClassNotFoundException, InterruptedException {
		Configuration conf=new Configuration();
		
		for (int i = 0; i < args.length; i++) {
			System.out.println("*******args["+i+"]====="+args[i]);
		}
		
		
		
		//conf.set("sword", args[0]);
		
		//conf.set("mapreduce.job.reduces", "4");
		
		
		
		
		Job job=Job.getInstance(conf, "Word Count Program");
		job.setJarByClass(WordCountDriver.class);
		job.setMapperClass(WordCountMapper.class);
		//job.setReducerClass(WordCountReducer.class);
		//job.setNumReduceTasks(0);
		job.setOutputKeyClass(Text.class);
		job.setOutputValueClass(NullWritable.class);
		
		job.setMapOutputKeyClass(Text.class);
		job.setMapOutputValueClass(NullWritable.class);
		//HDFS java client
		/*FileSystem fs = FileSystem.get(conf);
		if(fs.exists(new Path(args[2]))){
			fs.delete(new Path(args[2]), true);
			
		}
		*/
		
		
		FileInputFormat.addInputPath(job, new Path(args[0]));
		FileOutputFormat.setOutputPath(job, new Path(args[1]));
		
		System.exit(job.waitForCompletion(true)?0:1);
			
		
		
	}

}
